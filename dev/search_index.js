var documenterSearchIndex = {"docs":
[{"location":"ararma/#ARAR-and-ARARMA-Models","page":"ARAR/ARARMA","title":"ARAR and ARARMA Models","text":"","category":"section"},{"location":"ararma/#ARAR-Model","page":"ARAR/ARARMA","title":"ARAR Model","text":"","category":"section"},{"location":"ararma/","page":"ARAR/ARARMA","title":"ARAR/ARARMA","text":"The ARAR model applies a memory-shortening transformation; if the underlying process of a time series Y_t t=12ldotsn is “long-memory”, it then fits an autoregressive model.","category":"page"},{"location":"ararma/#Memory-Shortening","page":"ARAR/ARARMA","title":"Memory Shortening","text":"","category":"section"},{"location":"ararma/","page":"ARAR/ARARMA","title":"ARAR/ARARMA","text":"The model follows five steps to classify Y_t and take one of three actions:","category":"page"},{"location":"ararma/","page":"ARAR/ARARMA","title":"ARAR/ARARMA","text":"L: declare Y_t as long memory and form tilde Y_t = Y_t - hatphi Y_t-hattau\nM: declare Y_t as moderately long memory and form tilde Y_t = Y_t - hatphi_1 Y_t-1 - hatphi_2 Y_t-2\nS: declare Y_t as short memory.","category":"page"},{"location":"ararma/","page":"ARAR/ARARMA","title":"ARAR/ARARMA","text":"If Y_t is declared L or M, the series is transformed again until the transformed series is classified as short memory. (At most three transformations are applied; in practice, more than two is rare.)","category":"page"},{"location":"ararma/#Steps","page":"ARAR/ARARMA","title":"Steps","text":"","category":"section"},{"location":"ararma/","page":"ARAR/ARARMA","title":"ARAR/ARARMA","text":"For each tau=12ldots15, find hatphi(tau) that minimizes  \nmathrmERR(phitau) = \nfracdisplaystylesum_t=tau+1^nbig(Y_t-phiY_t-taubig)^2\n     displaystylesum_t=tau+1^nY_t^2\nthen set mathrmErr(tau)=mathrmERRbig(hatphi(tau)taubig) and choose   hattau=argmin_taumathrmErr(tau).\nIf mathrmErr(hattau)le 8n, then Y_t is a long-memory series.\nIf hatphi(hattau)ge 093 and hattau2, then Y_t is a long-memory series.\nIf hatphi(hattau)ge 093 and hattauin12, then Y_t is a long-memory series.\nIf hatphi(hattau)093, then Y_t is a short-memory series.","category":"page"},{"location":"ararma/#Subset-Autoregressive-Model","page":"ARAR/ARARMA","title":"Subset Autoregressive Model","text":"","category":"section"},{"location":"ararma/","page":"ARAR/ARARMA","title":"ARAR/ARARMA","text":"We now describe how ARAR fits an autoregression to the mean-corrected series   X_t=S_t-bar S, t=k+1ldotsn, where S_t is the memory-shortened version of Y_t obtained above and bar S is the sample mean of S_k+1ldotsS_n.","category":"page"},{"location":"ararma/","page":"ARAR/ARARMA","title":"ARAR/ARARMA","text":"The fitted model has the form","category":"page"},{"location":"ararma/","page":"ARAR/ARARMA","title":"ARAR/ARARMA","text":"X_t = phi_1 X_t-1 + phi_l_1 X_t-l_1 + phi_l_2 X_t-l_2 + phi_l_3 X_t-l_3 + Z_t\nqquad Z_t sim mathrmWN(0sigma^2)","category":"page"},{"location":"ararma/#Yule–Walker-Equations","page":"ARAR/ARARMA","title":"Yule–Walker Equations","text":"","category":"section"},{"location":"ararma/","page":"ARAR/ARARMA","title":"ARAR/ARARMA","text":"The coefficients phi_j and the noise variance sigma^2 follow from the Yule–Walker equations for given lags l_1l_2l_3:","category":"page"},{"location":"ararma/","page":"ARAR/ARARMA","title":"ARAR/ARARMA","text":"beginbmatrix\n1  hatrho(l_1-1)  hatrho(l_2-1)  hatrho(l_3-1)\nhatrho(l_1-1)  1  hatrho(l_2-l_1)  hatrho(l_3-l_1)\nhatrho(l_2-1)  hatrho(l_2-l_1)  1  hatrho(l_3-l_2)\nhatrho(l_3-1)  hatrho(l_3-l_1)  hatrho(l_3-l_2)  1\nendbmatrix\nbeginbmatrix\nphi_12pt\nphi_l_12pt\nphi_l_22pt\nphi_l_3\nendbmatrix\n=\nbeginbmatrix\nhatrho(1)2pt\nhatrho(l_1)2pt\nhatrho(l_2)2pt\nhatrho(l_3)\nendbmatrix","category":"page"},{"location":"ararma/","page":"ARAR/ARARMA","title":"ARAR/ARARMA","text":"sigma^2 = hatgamma(0)Big( 1 - phi_1hatrho(1) - phi_l_1hatrho(l_1) - phi_l_2hatrho(l_2) - phi_l_3hatrho(l_3) Big)","category":"page"},{"location":"ararma/","page":"ARAR/ARARMA","title":"ARAR/ARARMA","text":"where hatgamma(j) and hatrho(j), j=012ldots, are the sample autocovariances and autocorrelations of X_t.   The algorithm computes phi(cdot) for each set of lags with 1l_1l_2l_3le m (m typically 13 or 26) and selects the model with minimal Yule–Walker estimate of sigma^2.","category":"page"},{"location":"ararma/#Forecasting","page":"ARAR/ARARMA","title":"Forecasting","text":"","category":"section"},{"location":"ararma/","page":"ARAR/ARARMA","title":"ARAR/ARARMA","text":"If the short-memory filter found in the first step has coefficients Psi_0Psi_1ldotsPsi_k (kge0, Psi_0=1), then","category":"page"},{"location":"ararma/","page":"ARAR/ARARMA","title":"ARAR/ARARMA","text":"S_t = Psi(B)Y_t = Y_t + Psi_1 Y_t-1 + cdots + Psi_k Y_t-k\nqquad\nPsi(B) = 1 + Psi_1 B + cdots + Psi_k B^k ","category":"page"},{"location":"ararma/","page":"ARAR/ARARMA","title":"ARAR/ARARMA","text":"If the subset AR coefficients are phi_1phi_l_1phi_l_2phi_l_3 then, for X_t=S_t-bar S, ","category":"page"},{"location":"ararma/","page":"ARAR/ARARMA","title":"ARAR/ARARMA","text":"phi(B)X_t = Z_t qquad \nphi(B) = 1 - phi_1 B - phi_l_1 B^l_1 - phi_l_2 B^l_2 - phi_l_3 B^l_3","category":"page"},{"location":"ararma/","page":"ARAR/ARARMA","title":"ARAR/ARARMA","text":"From the two displays above,","category":"page"},{"location":"ararma/","page":"ARAR/ARARMA","title":"ARAR/ARARMA","text":"xi(B)Y_t = phi(1)bar S + Z_t \nqquad xi(B) = Psi(B)phi(B)","category":"page"},{"location":"ararma/","page":"ARAR/ARARMA","title":"ARAR/ARARMA","text":"Assuming this model is appropriate and Z_t is uncorrelated with Y_j for jt, the minimum-MSE linear predictors P_n Y_n+h of Y_n+h (for nk+l_3) satisfy the recursion","category":"page"},{"location":"ararma/","page":"ARAR/ARARMA","title":"ARAR/ARARMA","text":"P_n Y_n+h = - sum_j=1^k+l_3 xi_j  P_n Y_n+h-j + phi(1)bar S qquad hge 1","category":"page"},{"location":"ararma/","page":"ARAR/ARARMA","title":"ARAR/ARARMA","text":"with initial conditions P_n Y_n+h=Y_n+h for hle 0.","category":"page"},{"location":"ararma/#Reference","page":"ARAR/ARARMA","title":"Reference","text":"","category":"section"},{"location":"ararma/","page":"ARAR/ARARMA","title":"ARAR/ARARMA","text":"Brockwell, Peter J., and Richard A. Davis. Introduction to Time Series and Forecasting. Springer (2016)","category":"page"},{"location":"ararma/#Forecasing-in-Julia-using-Arar-Model","page":"ARAR/ARARMA","title":"Forecasing in Julia using Arar Model","text":"","category":"section"},{"location":"ararma/","page":"ARAR/ARARMA","title":"ARAR/ARARMA","text":"using Durbyn\nusing Durbyn.Ararma\n\nap = air_passengers()\n\nfit = arar(ap, max_ar_depth = 13)\nfc  = forecast(fit, h = 12)\nplot(fc)\n","category":"page"},{"location":"ararma/#Forecasing-in-Julia-using-Ararma-Model","page":"ARAR/ARARMA","title":"Forecasing in Julia using Ararma Model","text":"","category":"section"},{"location":"ararma/","page":"ARAR/ARARMA","title":"ARAR/ARARMA","text":"docs #TODO","category":"page"},{"location":"ararma/","page":"ARAR/ARARMA","title":"ARAR/ARARMA","text":"fit2 = ararma(ap, p = 0, q = 1)\nfc2  = forecast(fit2, h = 12)\nplot(fc2)\n\nfit3 = auto_ararma(ap)\nfc3  = forecast(fit3, h = 12)\nplot(fc3)","category":"page"},{"location":"expsmoothing/#Exponential-Smoothing-(ETS)","page":"Exponential Smoothing","title":"Exponential Smoothing (ETS)","text":"","category":"section"},{"location":"expsmoothing/","page":"Exponential Smoothing","title":"Exponential Smoothing","text":"Durbyn provides classical ETS variants and helpers.","category":"page"},{"location":"expsmoothing/","page":"Exponential Smoothing","title":"Exponential Smoothing","text":"using Durbyn\nusing Durbyn.ExponentialSmoothing\n\nap = air_passengers()\n\nfit_ets = ets(ap, 12, \"ZZZ\")\nfc_ets  = forecast(fit_ets, h = 12)\nplot(fc_ets)\n\nses_fit = ses(ap, 12)\nses_fc  = forecast(ses_fit, h = 12)\nplot(ses_fc)\n\nholt_fit = holt(ap, 12)\nholt_fc  = forecast(holt_fit, h = 12)\nplot(holt_fc)\n\nhw_fit = holt_winters(ap, 12)\nhw_fc  = forecast(hw_fit, h = 12)\nplot(hw_fc)","category":"page"},{"location":"expsmoothing/","page":"Exponential Smoothing","title":"Exponential Smoothing","text":"Arguments","category":"page"},{"location":"expsmoothing/","page":"Exponential Smoothing","title":"Exponential Smoothing","text":"season (12 for monthly, 4 for quarterly, etc.)\nspec string selecting error / trend / seasonality (e.g. \"ZZZ\")","category":"page"},{"location":"api/#API-Reference","page":"API Reference","title":"API Reference","text":"","category":"section"},{"location":"quickstart/#Quick-Start","page":"Quick Start","title":"Quick Start","text":"","category":"section"},{"location":"quickstart/","page":"Quick Start","title":"Quick Start","text":"Install (dev version):","category":"page"},{"location":"quickstart/","page":"Quick Start","title":"Quick Start","text":"using Pkg\nPkg.add(url=\"https://github.com/taf-society/Durbyn.jl\")","category":"page"},{"location":"quickstart/","page":"Quick Start","title":"Quick Start","text":"Basic forecasting with Exponential Smoothing (ETS):","category":"page"},{"location":"quickstart/","page":"Quick Start","title":"Quick Start","text":"using Durbyn\nusing Durbyn.ExponentialSmoothing\n\nap = air_passengers()\nfit_ets = ets(ap, 12, \"ZZZ\")\nfc_ets  = forecast(fit_ets, h = 12)","category":"page"},{"location":"quickstart/","page":"Quick Start","title":"Quick Start","text":"Plot (example with Plots.jl):","category":"page"},{"location":"quickstart/","page":"Quick Start","title":"Quick Start","text":"using Plots\nplot(fc_ets)","category":"page"},{"location":"quickstart/","page":"Quick Start","title":"Quick Start","text":"Next: Explore Intermittent Demand, ARIMA, and ARAR/ARARMA.","category":"page"},{"location":"arima/#ARIMA","page":"ARIMA","title":"ARIMA","text":"","category":"section"},{"location":"arima/","page":"ARIMA","title":"ARIMA","text":"Fit ARIMA models or let auto_arima choose orders.","category":"page"},{"location":"arima/","page":"ARIMA","title":"ARIMA","text":"using Durbyn\nusing Durbyn.Arima\n\nap  = air_passengers()\nfit = arima(ap, 12, order = PDQ(2,1,1), seasonal = PDQ(0,1,0))\nfc  = forecast(fit, h = 12)\n\nfit2 = auto_arima(ap, 12, d = 1, D = 1)\nfc2  = forecast(fit2, h = 12)\n\nplot(fc)","category":"page"},{"location":"#Durbyn.jl","page":"Home","title":"Durbyn.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"(Image: Durbyn.jl logo)","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: Stable) (Image: Dev) (Image: Build Status) (Image: Coverage)","category":"page"},{"location":"","page":"Home","title":"Home","text":"Durbyn is a Julia package that implements functionality of the R forecast package, providing tools for time-series forecasting.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The name Durbyn traces back to Kurdish, where Dur means “far” and Byn means “to see,” together signifying binoculars, which is why the package logo features them.","category":"page"},{"location":"","page":"Home","title":"Home","text":"This site documents the development version. After your first tagged release, see stable docs for the latest release.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#About-TAFS","page":"Home","title":"About TAFS","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"TAFS (Time Series Analysis and Forecasting Society) is a non-profit association (“Verein”) in Vienna, Austria. It connects academics, experts, practitioners, and students focused on time-series, forecasting, and decision science. Contributions remain fully open source.   Learn more at taf-society.org.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Durbyn is under active development. For the latest dev version:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Pkg\nPkg.add(url=\"https://github.com/taf-society/Durbyn.jl\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Quick-peek-(ETS)","page":"Home","title":"Quick peek (ETS)","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using Durbyn\nusing Durbyn.ExponentialSmoothing\n\nap = air_passengers()\n\nfit_ets = ets(ap, 12, \"ZZZ\")\nfc_ets  = forecast(fit_ets, h = 12)\nplot(fc_ets)\n\nses_fit = ses(ap, 12)\nses_fc  = forecast(ses_fit, h = 12)\nplot(ses_fc)\n\nholt_fit = holt(ap, 12)\nholt_fc  = forecast(holt_fit, h = 12)\nplot(holt_fc)\n\nhw_fit = holt_winters(ap, 12)\nhw_fc  = forecast(hw_fit, h = 12)\nplot(hw_fc)","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Intermittent-demand-(Croston-variants)","page":"Home","title":"Intermittent demand (Croston variants)","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"data = [6, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0,\n0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, \n0, 0, 0, 0, 0];\n\n# Based on Shenstone & Hyndman (2005)\nm = 1\nfit_crst = croston(data, m)\nfc_crst  = forecast(fit_crst, 12)\nplot(fc_crst)\n\nusing Durbyn.IntermittentDemand\n\n# Classical Croston (Croston, 1972)\ncrst1 = croston_classic(data)\nfc1   = forecast(crst1, h = 12)\n\nresiduals(crst1); residuals(fc1);\nfitted(crst1);    fitted(fc1);\nplot(fc1, show_fitted = true)\n\n# Croston + SBA correction\ncrst2 = croston_sba(data)\nfc2   = forecast(crst2, h = 12)\nplot(fc2, show_fitted = true)\n\n# Croston + SBJ correction\ncrst3 = croston_sbj(data)\nfc3   = forecast(crst3, h = 12)\nplot(fc3, show_fitted = true)","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#ARIMA","page":"Home","title":"ARIMA","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using Durbyn.Arima\n\nap  = air_passengers()\n\n# manual ARIMA\nfit = arima(ap, 12, order = PDQ(2,1,1), seasonal = PDQ(0,1,0))\nfc  = forecast(fit, h = 12)\n\n# auto ARIMA\nfit2 = auto_arima(ap, 12, d = 1, D = 1)\nfc2  = forecast(fit2, h = 12)\nplot(fc2)","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#ARAR-/-ARARMA","page":"Home","title":"ARAR / ARARMA","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using Durbyn\nusing Durbyn.Ararma\n\nap = air_passengers()\n\nfit  = arar(ap, max_ar_depth = 13)\nfc   = forecast(fit, h = 12)\nplot(fc)\n\nfit2 = ararma(ap, p = 0, q = 1)\nfc2  = forecast(fit2, h = 12)\nplot(fc2)\n\nfit3 = auto_ararma(ap)\nfc3  = forecast(fit3, h = 12)\nplot(fc3)","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#License","page":"Home","title":"License","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"MIT License.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#What’s-next","page":"Home","title":"What’s next","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Read the Quick Start (left sidebar).\nExplore User Guide pages (ETS, Intermittent Demand, ARIMA, ARAR/ARARMA).\nSee the API Reference for full docs.","category":"page"},{"location":"intermittent/#Intermittent-Demand","page":"Intermittent Demand","title":"Intermittent Demand","text":"","category":"section"},{"location":"intermittent/","page":"Intermittent Demand","title":"Intermittent Demand","text":"Tools for sparse series with many zeros, including Croston variants.","category":"page"},{"location":"intermittent/","page":"Intermittent Demand","title":"Intermittent Demand","text":"using Durbyn\nusing Durbyn.IntermittentDemand\n\ndata = [6, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0,\n0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, \n0, 0, 0, 0, 0];\n\n# Classical Croston method\ncrst = croston_classic(data)\nfc   = forecast(crst, h = 12)\nplot(fc, show_fitted = true)\n\n# SBA bias-corrected\ncrst2 = croston_sba(data)\nfc2   = forecast(crst2, h = 12)\n\n# SBJ correction\ncrst3 = croston_sbj(data)\nfc3   = forecast(crst3, h = 12)","category":"page"},{"location":"intermittent/","page":"Intermittent Demand","title":"Intermittent Demand","text":"Inspection","category":"page"},{"location":"intermittent/","page":"Intermittent Demand","title":"Intermittent Demand","text":"residuals(crst); residuals(fc);\nfitted(crst);    fitted(fc);","category":"page"}]
}
